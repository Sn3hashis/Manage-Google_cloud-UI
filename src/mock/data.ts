import type { VM, Network, FirewallRule, Role, ServiceAccount, DashboardStats } from '../types';

export const vms: VM[] = [
  {
    id: '1',
    name: 'prod-web-server-1',
    status: 'running',
    zone: 'us-central1-a',
    machineType: 'e2-standard-2',
    ip: '10.128.0.2',
    tags: ['http-server', 'https-server', 'production'],
    created: '2023-10-10T08:30:00Z',
    cpu: 2,
    memory: 8,
    diskSize: 80,
    cpuUsage: 68,
    memoryUsage: 72,
    networkIn: 1.2,
    networkOut: 0.5,
    cost: 4.20,
  },
  {
    id: '2',
    name: 'staging-api-1',
    status: 'running',
    zone: 'us-central1-b',
    machineType: 'e2-medium',
    ip: '10.128.0.3',
    tags: ['api', 'staging'],
    created: '2023-11-15T10:45:00Z',
    cpu: 1,
    memory: 4,
    diskSize: 50,
    cpuUsage: 42,
    memoryUsage: 38,
    networkIn: 0.8,
    networkOut: 0.3,
    cost: 2.10,
  },
  {
    id: '3',
    name: 'mongodb-primary',
    status: 'running',
    zone: 'us-central1-a',
    machineType: 'e2-standard-4',
    ip: '10.128.0.4',
    tags: ['mongodb', 'database', 'production'],
    created: '2023-09-22T14:20:00Z',
    cpu: 4,
    memory: 16,
    diskSize: 500,
    cpuUsage: 56,
    memoryUsage: 84,
    networkIn: 0.5,
    networkOut: 1.8,
    cost: 8.40,
  },
  {
    id: '4',
    name: 'dev-instance-1',
    status: 'stopped',
    zone: 'us-central1-c',
    machineType: 'e2-small',
    ip: '10.128.0.5',
    tags: ['development'],
    created: '2023-12-05T09:15:00Z',
    cpu: 1,
    memory: 2,
    diskSize: 30,
    cpuUsage: 0,
    memoryUsage: 0,
    networkIn: 0,
    networkOut: 0,
    cost: 0.95,
  },
  {
    id: '5',
    name: 'batch-processor',
    status: 'running',
    zone: 'us-central1-a',
    machineType: 'e2-standard-8',
    ip: '10.128.0.6',
    tags: ['batch', 'processing'],
    created: '2023-11-01T11:30:00Z',
    cpu: 8,
    memory: 32,
    diskSize: 120,
    cpuUsage: 92,
    memoryUsage: 78,
    networkIn: 1.5,
    networkOut: 2.3,
    cost: 12.80,
  },
  {
    id: '6',
    name: 'redis-cache',
    status: 'running',
    zone: 'us-central1-b',
    machineType: 'e2-medium',
    ip: '10.128.0.7',
    tags: ['redis', 'cache'],
    created: '2023-10-18T07:40:00Z',
    cpu: 1,
    memory: 4,
    diskSize: 20,
    cpuUsage: 35,
    memoryUsage: 62,
    networkIn: 3.2,
    networkOut: 0.9,
    cost: 2.10,
  },
];

export const networks: Network[] = [
  {
    id: '1',
    name: 'default-network',
    subnet: '10.128.0.0/20',
    region: 'us-central1',
    ipRange: '10.128.0.0/20',
    instances: 12,
    status: 'active',
  },
  {
    id: '2',
    name: 'production-network',
    subnet: '10.129.0.0/20',
    region: 'us-central1',
    ipRange: '10.129.0.0/20',
    instances: 8,
    status: 'active',
  },
  {
    id: '3',
    name: 'staging-network',
    subnet: '10.130.0.0/20',
    region: 'us-central1',
    ipRange: '10.130.0.0/20',
    instances: 4,
    status: 'active',
  },
  {
    id: '4',
    name: 'development-network',
    subnet: '10.131.0.0/20',
    region: 'us-central1',
    ipRange: '10.131.0.0/20',
    instances: 2,
    status: 'inactive',
  },
];

export const firewallRules: FirewallRule[] = [
  {
    id: '1',
    name: 'allow-internal',
    network: 'default-network',
    direction: 'ingress',
    priority: 1000,
    action: 'allow',
    sourceRanges: ['10.128.0.0/20'],
    targetTags: [],
    protocols: {
      tcp: ['0-65535'],
      udp: ['0-65535'],
      icmp: true,
    },
  },
  {
    id: '2',
    name: 'allow-http',
    network: 'default-network',
    direction: 'ingress',
    priority: 1001,
    action: 'allow',
    sourceRanges: ['0.0.0.0/0'],
    targetTags: ['http-server'],
    protocols: {
      tcp: ['80'],
    },
  },
  {
    id: '3',
    name: 'allow-https',
    network: 'default-network',
    direction: 'ingress',
    priority: 1002,
    action: 'allow',
    sourceRanges: ['0.0.0.0/0'],
    targetTags: ['https-server'],
    protocols: {
      tcp: ['443'],
    },
  },
  {
    id: '4',
    name: 'allow-ssh',
    network: 'default-network',
    direction: 'ingress',
    priority: 1003,
    action: 'allow',
    sourceRanges: ['0.0.0.0/0'],
    targetTags: [],
    protocols: {
      tcp: ['22'],
    },
  },
  {
    id: '5',
    name: 'deny-all-egress',
    network: 'production-network',
    direction: 'egress',
    priority: 1000,
    action: 'deny',
    sourceRanges: ['0.0.0.0/0'],
    targetTags: [],
    protocols: {
      tcp: ['0-65535'],
      udp: ['0-65535'],
      icmp: true,
    },
  },
];

export const roles: Role[] = [
  {
    id: '1',
    name: 'Admin',
    description: 'Full access to all resources',
    permissions: ['compute.instances.*', 'storage.*', 'iam.*', 'networking.*'],
  },
  {
    id: '2',
    name: 'Compute Admin',
    description: 'Full access to compute resources',
    permissions: ['compute.instances.*', 'compute.disks.*', 'compute.networks.use'],
  },
  {
    id: '3',
    name: 'Network Admin',
    description: 'Full access to networking resources',
    permissions: ['compute.networks.*', 'compute.firewalls.*', 'compute.routes.*'],
  },
  {
    id: '4',
    name: 'Viewer',
    description: 'Read-only access to all resources',
    permissions: ['*.get', '*.list'],
  },
];

export const serviceAccounts: ServiceAccount[] = [
  {
    id: '1',
    name: 'App Engine default service account',
    email: 'app-engine@project-id.iam.gserviceaccount.com',
    roles: ['Compute Admin', 'Storage Object Admin'],
    created: '2023-08-10T08:30:00Z',
  },
  {
    id: '2',
    name: 'Compute Engine default service account',
    email: 'compute@project-id.iam.gserviceaccount.com',
    roles: ['Compute Admin'],
    created: '2023-08-10T08:30:00Z',
  },
  {
    id: '3',
    name: 'CI/CD service account',
    email: 'cicd@project-id.iam.gserviceaccount.com',
    roles: ['Compute Admin', 'Storage Object Admin', 'Artifact Registry Admin'],
    created: '2023-09-15T14:45:00Z',
  },
];

export const dashboardStats: DashboardStats = {
  activeVMs: 5,
  stoppedVMs: 1,
  networks: 4,
  totalCost: 32.55,
  resourceUsage: {
    cpu: 62,
    memory: 70,
    disk: 45,
    network: 58,
  },
};

// Generate random data for charts
export const generateChartData = (points: number, min: number, max: number): number[] => {
  return Array(points)
    .fill(0)
    .map(() => min + Math.random() * (max - min));
};